name: Go Test PostgreSQL & Bootstrap

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  test-postgres:
    name: test-postgres-and-bootstrap
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: inventario_test
          POSTGRES_USER: inventario_test
          POSTGRES_PASSWORD: test_password
          # Enable superuser privileges for the main test user
          POSTGRES_INITDB_ARGS: "--auth-host=trust"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - id: vars
        uses: ./.github/actions/vars

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.vars.outputs.go_version }}
          cache: true
          cache-dependency-path: go/go.sum

      - name: Install dependencies
        run: go mod download
        working-directory: go

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U inventario_test; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Set up PostgreSQL users and databases
        run: |
          # Connect as the superuser to create additional users and databases
          export PGPASSWORD=test_password

          # Create the main test database for bootstrap tests (must be separate from other commands)
          psql -h localhost -p 5432 -U inventario_test -d inventario_test -c "
            CREATE DATABASE inventario_test;
          "

          # Create the main application users that bootstrap migrations expect
          psql -h localhost -p 5432 -U inventario_test -d inventario_test -c "
            CREATE USER inventario WITH PASSWORD 'inventario_password';
            CREATE USER inventario_migrator WITH PASSWORD 'inventario_migrator_password';
          "

          # Grant necessary privileges to the main users
          psql -h localhost -p 5432 -U inventario_test -d inventario_test -c "
            GRANT ALL PRIVILEGES ON DATABASE inventario_test TO inventario;
            GRANT ALL PRIVILEGES ON DATABASE inventario_test TO inventario_migrator;
          "

          # Grant superuser privileges to inventario_test user for bootstrap tests
          # (needed to create extensions and manage roles)
          psql -h localhost -p 5432 -U inventario_test -d inventario_test -c "
            ALTER USER inventario_test WITH SUPERUSER;
          "

          # Create a limited privilege user for testing transaction rollback
          # Grant minimal privileges (can connect but cannot create extensions)
          psql -h localhost -p 5432 -U inventario_test -d inventario_test -c "
            CREATE USER limited_user WITH PASSWORD 'limited_password' NOSUPERUSER NOCREATEDB NOCREATEROLE;
            GRANT CONNECT ON DATABASE inventario TO limited_user;
          "

          # Connect to the inventario database and set up schema permissions
          psql -h localhost -p 5432 -U inventario_test -d inventario -c "
            -- Grant schema usage to main users
            GRANT ALL ON SCHEMA public TO inventario;
            GRANT ALL ON SCHEMA public TO inventario_migrator;

            -- Grant minimal schema access to limited user
            GRANT USAGE ON SCHEMA public TO limited_user;
          "

          echo "PostgreSQL users and databases set up successfully"

      - name: Run PostgreSQL registry tests
        env:
          POSTGRES_TEST_DSN: "postgres://inventario_test:test_password@localhost:5432/inventario_test?sslmode=disable"
        run: go test -v -race ./registry/postgres/...
        working-directory: go

      - name: Run Bootstrap integration tests
        env:
          # Main DSN with superuser privileges for successful migration tests
          POSTGRES_TEST_DSN: "postgres://inventario_test:test_password@localhost:5432/inventario?sslmode=disable"
          # Limited DSN for testing transaction rollback scenarios
          POSTGRES_LIMITED_TEST_DSN: "postgres://limited_user:limited_password@localhost:5432/inventario?sslmode=disable"
        run: |
          echo "Running bootstrap integration tests..."
          echo "Main DSN: $POSTGRES_TEST_DSN"
          echo "Limited DSN: $POSTGRES_LIMITED_TEST_DSN"
          go test -v -race ./schema/bootstrap
        working-directory: go
