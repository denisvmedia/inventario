name: E2E Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    #container:
    #  image: mcr.microsoft.com/playwright:v1.50.0-noble

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: inventario_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      INVENTARIO_DB_DSN: postgres://postgres:postgres@localhost:5432/inventario_test?sslmode=disable
      INVENTARIO_LOG_FORMAT: json

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - id: vars
        uses: ./.github/actions/vars

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.vars.outputs.go_version }}
          cache: true
          cache-dependency-path: go/go.sum

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.vars.outputs.node_version }}
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            e2e/package-lock.json

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Install e2e dependencies
        run: cd e2e && npm ci

      # Cache Playwright browsers
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('e2e/package-lock.json') }}

      # Install browsers with all system dependencies
      - name: Install Playwright browsers
        run: cd e2e && npx playwright install --with-deps

      - name: Run database migrations
        run: |
          cd go
          go mod download
          cd ..
          make build-inventool
          bin/inventool db bootstrap apply --username=postgres --db-dsn "${{ env.DB_DSN }}"
          bin/inventool db migrations up --db-dsn "${{ env.DB_DSN }}"

      - name: Start application stack and run fast-fail test
        run: |
          # Start the backend, seed the database, and start the frontend
          cd e2e && npm run stack &

          # Wait for stack to be ready
          npx wait-on http://localhost:5173

          # Run the fast-fail test first to debug the specific issue
          cd e2e && npx playwright test --grep "should update and immediately retrieve a commodity \(fast-fail debug\)"

      - name: Run full test suite
        if: success()
        run: |
          # Run the full test suite
          cd e2e && npm run test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 30
