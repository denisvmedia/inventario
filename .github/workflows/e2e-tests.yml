name: E2E Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'
          cache: true

      # Install system dependencies for Playwright
      - name: Install Playwright dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libatk1.0-0 \
            libcairo2 \
            libcups2 \
            libdbus-1-3 \
            libexpat1 \
            libfontconfig1 \
            libgbm1 \
            libglib2.0-0 \
            libgtk-3-0 \
            libnspr4 \
            libnss3 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libstdc++6 \
            libx11-6 \
            libx11-xcb1 \
            libxcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            libgstreamer-plugins-base1.0-0 \
            libgstreamer1.0-0 \
            fonts-noto-color-emoji \
            fonts-freefont-ttf \
            libsecret-1-0 \
            libhyphen0 \
            xvfb

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.node.outputs.version }}
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            e2e/package-lock.json

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Install e2e dependencies
        run: cd e2e && npm ci && npm run install-browsers

      - name: Start application stack and run tests
        run: |
          # Start the backend, seed the database, and start the frontend
          cd e2e && npm run stack &

          # Wait for the stack to be ready (30 seconds should be enough)
          sleep 30

          # Run the tests
          cd e2e && npm run test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 30
