name: E2E Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  e2e-tests:
    name: E2E Tests (PostgreSQL)
    runs-on: ubuntu-latest
    #container:
    #  image: mcr.microsoft.com/playwright:v1.50.0-noble

    # PostgreSQL service for e2e tests
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: inventario_e2e
          POSTGRES_USER: inventario_e2e
          POSTGRES_PASSWORD: inventario_e2e_password
          POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: vars
        uses: ./.github/actions/vars

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.vars.outputs.go_version }}
          cache: true
          cache-dependency-path: go/go.sum

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.vars.outputs.node_version }}
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            e2e/package-lock.json

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Install e2e dependencies
        run: cd e2e && npm ci

      # Install browsers with all system dependencies
      - name: Install Playwright browsers
        run: cd e2e && npx playwright install --with-deps

      - name: Set PostgreSQL environment variables
        run: |
          echo "E2E_POSTGRES_DB=inventario_e2e" >> $GITHUB_ENV
          echo "E2E_POSTGRES_USER=inventario_e2e" >> $GITHUB_ENV
          echo "E2E_POSTGRES_PASSWORD=inventario_e2e_password" >> $GITHUB_ENV
          echo "E2E_POSTGRES_PORT=5433" >> $GITHUB_ENV
          echo "CI=true" >> $GITHUB_ENV

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Run E2E tests with PostgreSQL
        run: |
          # The tests will automatically start PostgreSQL-centric stack
          cd e2e && npm test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 30
