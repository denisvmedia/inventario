# GitHub Copilot setup steps for Inventario
# This file configures the development environment for GitHub Copilot workspace.
# See: https://docs.github.com/en/copilot/customizing-copilot/customizing-the-development-environment-for-copilot-coding-agent

name: Setup Inventario development environment

on:
  workflow_dispatch

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v5

      - id: vars
        uses: ./.github/actions/vars

#      # Install system dependencies
#      - name: Update package lists
#        run: sudo apt-get update
#
#      - name: Install essential build tools
#        run: sudo apt-get install -y build-essential git curl wget ca-certificates gnupg lsb-release

      # Install Go
      - uses: actions/setup-go@v6
        with:
          go-version: ${{ steps.vars.outputs.go_version }}
          cache: true
          cache-dependency-path: go/go.sum

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ steps.vars.outputs.node_version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

#      # Install Docker and Docker Compose
#      - name: Install Docker
#        run: |
#          # Add Docker's official GPG key
#          sudo install -m 0755 -d /etc/apt/keyrings
#          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
#          sudo chmod a+r /etc/apt/keyrings/docker.gpg
#
#          # Add Docker repository
#          echo \
#            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
#            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
#            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#
#          # Install Docker Engine
#          sudo apt-get update
#          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
#
#          # Add user to docker group (requires re-login to take effect)
#          sudo usermod -aG docker $USER

#      # Install PostgreSQL client tools for testing
#      - name: Install PostgreSQL client
#        run: sudo apt-get install -y postgresql-client

      # Install project Go dependencies and tools
      - name: Install Go dependencies and tools
        run: |
          # Download Go module dependencies
          go mod download
          
          # Install golangci-lint (version from workflow)
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin ${{ steps.vars.outputs.golangci_lint_version }}
        working-directory: go

      - name: Install swag for Swagger documentation
        run: |
          # Install swag for Swagger documentation (version from go.mod)
          go install github.com/swaggo/swag/cmd/swag@${{ steps.vars.outputs.swag_version }}

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: npm ci
        working-directory: frontend

#      # Install e2e test dependencies and Playwright browsers
#      - name: Install e2e dependencies and Playwright browsers
#        run: |
#          npm ci
#          npx playwright install --with-deps
#        working-directory: e2e
