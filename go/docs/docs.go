// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Inventario Support",
            "url": "https://github.com/denisvmedia/inventario/issues",
            "email": "ask@artprima.cz"
        },
        "license": {
            "name": "MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/areas": {
            "get": {
                "description": "get areas",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "areas"
                ],
                "summary": "List areas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.AreasResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "add by area data",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "areas"
                ],
                "summary": "Create a new area",
                "parameters": [
                    {
                        "description": "Area object",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.AreaRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Area created",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.AreaResponse"
                        }
                    },
                    "404": {
                        "description": "Area not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    },
                    "422": {
                        "description": "User-side request problem",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/areas/{id}": {
            "get": {
                "description": "get area by ID",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "areas"
                ],
                "summary": "Get an area",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Area ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.AreaResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update by area data",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "areas"
                ],
                "summary": "Update a area",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Area ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Area object",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.AreaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.AreaResponse"
                        }
                    },
                    "404": {
                        "description": "Area not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    },
                    "422": {
                        "description": "User-side request problem",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete by area ID",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "areas"
                ],
                "summary": "Delete an area",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Area ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Area not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/commodities": {
            "get": {
                "description": "get commodities",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "List commodities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.CommoditiesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new commodity",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Create a new commodity",
                "parameters": [
                    {
                        "description": "Commodity object",
                        "name": "commodity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.CommodityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Commodity created",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.CommodityResponse"
                        }
                    },
                    "422": {
                        "description": "User-side request problem",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/commodities/values": {
            "get": {
                "description": "Get the total value of commodities globally, by location, and by area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Get total value of commodities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ValueResponse"
                        }
                    }
                }
            }
        },
        "/commodities/{commodityID}/images": {
            "get": {
                "description": "get images for a commodity",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "List images for a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ImagesResponse"
                        }
                    }
                }
            }
        },
        "/commodities/{commodityID}/images/{imageID}": {
            "get": {
                "description": "get data of an image for a commodity",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Get image data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ImageResponse"
                        }
                    },
                    "404": {
                        "description": "Commodity or image not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "put": {
                "description": "update an image's path",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Update an image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.CommodityFileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ImageResponse"
                        }
                    },
                    "404": {
                        "description": "Commodity or image not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an image for a commodity",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Delete an image for a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Commodity or image not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/commodities/{commodityID}/images/{imageID}.{imageExt}": {
            "get": {
                "description": "Download an image file for a commodity",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Download an image file for a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image Extension",
                        "name": "imageExt",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Commodity or image not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/commodities/{commodityID}/invoices": {
            "get": {
                "description": "get invoices for a commodity",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "List invoices for a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.InvoicesResponse"
                        }
                    }
                }
            }
        },
        "/commodities/{commodityID}/invoices/{invoiceID}": {
            "get": {
                "description": "get data of an invoice for a commodity",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Get invoice data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "invoiceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.InvoiceResponse"
                        }
                    },
                    "404": {
                        "description": "Commodity or invoice not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "put": {
                "description": "update an invoice's path",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Update an invoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "invoiceID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.CommodityFileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.InvoiceResponse"
                        }
                    },
                    "404": {
                        "description": "Commodity or invoice not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an invoice for a commodity",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Delete an invoice for a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "invoiceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Commodity or invoice not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/commodities/{commodityID}/invoices/{invoiceID}.{invoiceExt}": {
            "get": {
                "description": "Download an invoice file for a commodity",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Download an invoice file for a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "invoiceID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invoice Extension",
                        "name": "invoiceExt",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Commodity or invoice not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/commodities/{commodityID}/manuals": {
            "get": {
                "description": "get manuals for a commodity",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "List manuals for a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ManualsResponse"
                        }
                    }
                }
            }
        },
        "/commodities/{commodityID}/manuals/{manualID}": {
            "get": {
                "description": "get data of a manual for a commodity",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Get manual data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Manual ID",
                        "name": "manualID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ManualResponse"
                        }
                    },
                    "404": {
                        "description": "Commodity or manual not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "put": {
                "description": "update a manual's path",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Update a manual",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Manual ID",
                        "name": "manualID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.CommodityFileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ManualResponse"
                        }
                    },
                    "404": {
                        "description": "Commodity or manual not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a manual for a commodity",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Delete a manual for a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Manual ID",
                        "name": "manualID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Commodity or manual not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/commodities/{commodityID}/manuals/{manualID}.{manualExt}": {
            "get": {
                "description": "Download a manual file for a commodity",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Download a manual file for a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "commodityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Manual ID",
                        "name": "manualID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Manual Extension",
                        "name": "manualExt",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Commodity or manual not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/commodities/{id}": {
            "get": {
                "description": "get commodity by ID",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Get a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.CommodityResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a commodity",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Update a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Commodity object",
                        "name": "commodity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.CommodityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.CommodityResponse"
                        }
                    },
                    "404": {
                        "description": "Commodity not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    },
                    "422": {
                        "description": "User-side request problem",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a commodity by ID and all its linked files",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "commodities"
                ],
                "summary": "Delete a commodity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Commodity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Commodity not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/currencies": {
            "get": {
                "description": "get list of supported currencies",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currencies"
                ],
                "summary": "Get supported currencies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/debug": {
            "get": {
                "description": "get debug information about file storage, database driver, and operating system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "Get debug information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/debug.Info"
                        }
                    }
                }
            }
        },
        "/exports": {
            "get": {
                "description": "get exports",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "exports"
                ],
                "summary": "List exports",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Include deleted exports",
                        "name": "include_deleted",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ExportsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new export",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "exports"
                ],
                "summary": "Create an export",
                "parameters": [
                    {
                        "description": "Export",
                        "name": "export",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ExportCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ExportResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/exports/import": {
            "post": {
                "description": "Import an uploaded XML export file and create an export record",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "exports"
                ],
                "summary": "Import XML export",
                "parameters": [
                    {
                        "description": "Import request data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ImportExportRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ExportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/exports/{id}": {
            "get": {
                "description": "get export by ID",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "exports"
                ],
                "summary": "Get an export",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Export ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.ExportResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete an export",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "exports"
                ],
                "summary": "Delete an export",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Export ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/exports/{id}/download": {
            "get": {
                "description": "Download an export XML file",
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "exports"
                ],
                "summary": "Download an export file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Export ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/exports/{id}/restores": {
            "get": {
                "description": "get restore operations for an export",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "exports"
                ],
                "summary": "List export restore operations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Export ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.RestoreOperationsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new restore operation for an export",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "exports"
                ],
                "summary": "Create export restore operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Export ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Restore operation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.RestoreOperationCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.RestoreOperationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/exports/{id}/restores/{restoreId}": {
            "get": {
                "description": "get restore operation by ID for an export",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "exports"
                ],
                "summary": "Get export restore operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Export ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Restore Operation ID",
                        "name": "restoreId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.RestoreOperationResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a restore operation for an export",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "exports"
                ],
                "summary": "Delete export restore operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Export ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Restore Operation ID",
                        "name": "restoreId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "description": "get files with optional filtering",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "List files",
                "parameters": [
                    {
                        "enum": [
                            "image",
                            "document",
                            "video",
                            "audio",
                            "archive",
                            "other"
                        ],
                        "type": "string",
                        "description": "Filter by file type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in title, description, and file paths",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by tags (comma-separated)",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number (1-based)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.FilesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new file entity with metadata (file upload handled separately)",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Create a file entity",
                "parameters": [
                    {
                        "description": "File metadata",
                        "name": "file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.FileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.FileResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/files/{id}": {
            "get": {
                "description": "get file by ID",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.FileResponse"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "put": {
                "description": "update file metadata",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Update a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "File update data",
                        "name": "file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.FileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.FileResponse"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete file and its associated file",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Delete a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/files/{id}.{ext}": {
            "get": {
                "description": "download file content",
                "tags": [
                    "files"
                ],
                "summary": "Download a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File extension",
                        "name": "ext",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content"
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "description": "get locations",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "List locations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.LocationsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "add by location data",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Create a new location",
                "parameters": [
                    {
                        "description": "Location object",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.LocationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Location created",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.LocationResponse"
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    },
                    "422": {
                        "description": "User-side request problem",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/locations/{id}": {
            "get": {
                "description": "get location by ID",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Get a location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.LocationResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update by location data",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Update a location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location object",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonapi.LocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.LocationResponse"
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    },
                    "422": {
                        "description": "User-side request problem",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete by location ID",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Delete a location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Location not found",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.Errors"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Perform advanced search across commodities, files, and other entities",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Advanced search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "commodities",
                            "files",
                            "areas",
                            "locations"
                        ],
                        "type": "string",
                        "description": "Entity type to search",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Maximum number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by tags (comma-separated)",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "AND",
                            "OR"
                        ],
                        "type": "string",
                        "default": "OR",
                        "description": "Tag operator",
                        "name": "operator",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.SearchResponse"
                        }
                    }
                }
            }
        },
        "/search/capabilities": {
            "get": {
                "description": "Get information about what features are supported by the current database backend",
                "consumes": [
                    "application/vnd.api+json"
                ],
                "produces": [
                    "application/vnd.api+json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Get database capabilities",
                "responses": {
                    "200": {
                        "description": "Database capabilities",
                        "schema": {
                            "$ref": "#/definitions/jsonapi.CapabilitiesResponse"
                        }
                    }
                }
            }
        },
        "/seed": {
            "post": {
                "description": "Seed the database with example data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Seed database",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "description": "get current settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Get current settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SettingsObject"
                        }
                    }
                }
            },
            "put": {
                "description": "update entire settings object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Update settings",
                "parameters": [
                    {
                        "description": "Settings object",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SettingsObject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SettingsObject"
                        }
                    }
                }
            }
        },
        "/settings/{field}": {
            "patch": {
                "description": "update a specific setting field",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Patch setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting field path (e.g., system.main_currency)",
                        "name": "field",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Setting value",
                        "name": "value",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SettingsObject"
                        }
                    }
                }
            }
        },
        "/system": {
            "get": {
                "description": "get comprehensive system information including version, runtime metrics, and settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Get system information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apiserver.SystemInfo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiserver.SystemInfo": {
            "type": "object",
            "properties": {
                "build_date": {
                    "type": "string"
                },
                "commit": {
                    "type": "string"
                },
                "database_backend": {
                    "description": "System information",
                    "type": "string"
                },
                "file_storage_backend": {
                    "type": "string"
                },
                "go_version": {
                    "type": "string"
                },
                "memory_usage": {
                    "type": "string"
                },
                "num_cpu": {
                    "type": "integer"
                },
                "num_goroutines": {
                    "type": "integer"
                },
                "operating_system": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "settings": {
                    "description": "Settings information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.SettingsObject"
                        }
                    ]
                },
                "uptime": {
                    "description": "Runtime metrics",
                    "type": "string"
                },
                "version": {
                    "description": "Version information",
                    "type": "string"
                }
            }
        },
        "debug.Info": {
            "type": "object",
            "properties": {
                "database_driver": {
                    "type": "string"
                },
                "error": {},
                "file_storage_driver": {
                    "type": "string"
                },
                "operating_system": {
                    "type": "string"
                }
            }
        },
        "jsonapi.AreaData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.Area"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "areas"
                    ],
                    "example": "areas"
                }
            }
        },
        "jsonapi.AreaRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.AreaData"
                }
            }
        },
        "jsonapi.AreaResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.AreaResponseData"
                }
            }
        },
        "jsonapi.AreaResponseData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.Area"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "areas"
                    ],
                    "example": "areas"
                }
            }
        },
        "jsonapi.AreasMeta": {
            "type": "object",
            "properties": {
                "areas": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                }
            }
        },
        "jsonapi.AreasResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jsonapi.AreaData"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/jsonapi.AreasMeta"
                }
            }
        },
        "jsonapi.CapabilitiesData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/registry.DatabaseCapabilities"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "jsonapi.CapabilitiesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.CapabilitiesData"
                }
            }
        },
        "jsonapi.CommoditiesMeta": {
            "type": "object",
            "properties": {
                "commodities": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                }
            }
        },
        "jsonapi.CommoditiesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jsonapi.CommodityData"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/jsonapi.CommoditiesMeta"
                }
            }
        },
        "jsonapi.CommodityData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.Commodity"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "commodities"
                    ],
                    "example": "commodities"
                }
            }
        },
        "jsonapi.CommodityFileUpdateParams": {
            "type": "object",
            "properties": {
                "path": {
                    "description": "Only the Path field can be updated",
                    "type": "string"
                }
            }
        },
        "jsonapi.CommodityFileUpdateRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "attributes": {
                            "$ref": "#/definitions/jsonapi.CommodityFileUpdateParams"
                        },
                        "id": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "images",
                                "manuals",
                                "invoices"
                            ],
                            "example": "images"
                        }
                    }
                }
            }
        },
        "jsonapi.CommodityMeta": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images_error": {
                    "type": "string"
                },
                "invoices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "invoices_error": {
                    "type": "string"
                },
                "manuals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manuals_error": {
                    "type": "string"
                }
            }
        },
        "jsonapi.CommodityRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.CommodityData"
                }
            }
        },
        "jsonapi.CommodityResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.CommodityResponseData"
                }
            }
        },
        "jsonapi.CommodityResponseData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.Commodity"
                },
                "id": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/jsonapi.CommodityMeta"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "commodities"
                    ],
                    "example": "commodities"
                }
            }
        },
        "jsonapi.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "user-level error message",
                    "type": "object"
                },
                "status": {
                    "description": "user-level status message",
                    "type": "string"
                }
            }
        },
        "jsonapi.Errors": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jsonapi.Error"
                    }
                }
            }
        },
        "jsonapi.ExportCreateRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.ExportCreateRequestData"
                }
            }
        },
        "jsonapi.ExportCreateRequestData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.Export"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "exports"
                    ],
                    "example": "exports"
                }
            }
        },
        "jsonapi.ExportResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.ExportResponseData"
                }
            }
        },
        "jsonapi.ExportResponseData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.Export"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "exports"
                    ],
                    "example": "exports"
                }
            }
        },
        "jsonapi.ExportsMeta": {
            "type": "object",
            "properties": {
                "exports": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                }
            }
        },
        "jsonapi.ExportsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jsonapi.ExportResponseData"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/jsonapi.ExportsMeta"
                }
            }
        },
        "jsonapi.FileRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.FileRequestDataWrapper"
                }
            }
        },
        "jsonapi.FileRequestData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "linked_entity_id": {
                    "description": "ID of linked entity",
                    "type": "string"
                },
                "linked_entity_meta": {
                    "description": "metadata about the link",
                    "type": "string"
                },
                "linked_entity_type": {
                    "description": "commodity, export, or empty",
                    "type": "string"
                },
                "path": {
                    "description": "Only for updates",
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "jsonapi.FileRequestDataWrapper": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/jsonapi.FileRequestData"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "jsonapi.FileResponse": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.FileEntity"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "files"
                    ],
                    "example": "files"
                }
            }
        },
        "jsonapi.FileUpdateRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.FileUpdateRequestData"
                }
            }
        },
        "jsonapi.FileUpdateRequestData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/jsonapi.FileUpdateRequestFileData"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "files"
                    ],
                    "example": "files"
                }
            }
        },
        "jsonapi.FileUpdateRequestFileData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "linked_entity_id": {
                    "description": "ID of linked entity",
                    "type": "string"
                },
                "linked_entity_meta": {
                    "description": "metadata about the link",
                    "type": "string"
                },
                "linked_entity_type": {
                    "description": "commodity, export, or empty",
                    "type": "string"
                },
                "path": {
                    "description": "User-editable filename",
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "jsonapi.FilesMeta": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "integer",
                    "format": "int64",
                    "example": 10
                },
                "total": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                }
            }
        },
        "jsonapi.FilesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FileEntity"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/jsonapi.FilesMeta"
                }
            }
        },
        "jsonapi.ImageResponse": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.Image"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "images"
                    ],
                    "example": "images"
                }
            }
        },
        "jsonapi.ImagesMeta": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                }
            }
        },
        "jsonapi.ImagesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Image"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/jsonapi.ImagesMeta"
                }
            }
        },
        "jsonapi.ImportExportAttributes": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "source_file_path": {
                    "type": "string"
                }
            }
        },
        "jsonapi.ImportExportRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.ImportExportRequestData"
                }
            }
        },
        "jsonapi.ImportExportRequestData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/jsonapi.ImportExportAttributes"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "exports"
                    ],
                    "example": "exports"
                }
            }
        },
        "jsonapi.InvoiceResponse": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.Invoice"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "invoices"
                    ],
                    "example": "invoices"
                }
            }
        },
        "jsonapi.InvoicesMeta": {
            "type": "object",
            "properties": {
                "invoices": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                }
            }
        },
        "jsonapi.InvoicesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Invoice"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/jsonapi.InvoicesMeta"
                }
            }
        },
        "jsonapi.Location": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "areas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "jsonapi.LocationData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.Location"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "locations"
                    ],
                    "example": "locations"
                }
            }
        },
        "jsonapi.LocationRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.LocationData"
                }
            }
        },
        "jsonapi.LocationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.LocationResponseData"
                }
            }
        },
        "jsonapi.LocationResponseData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/jsonapi.Location"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "locations"
                    ],
                    "example": "locations"
                }
            }
        },
        "jsonapi.LocationsMeta": {
            "type": "object",
            "properties": {
                "locations": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                }
            }
        },
        "jsonapi.LocationsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jsonapi.LocationData"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/jsonapi.LocationsMeta"
                }
            }
        },
        "jsonapi.ManualResponse": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.Manual"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "manuals"
                    ],
                    "example": "manuals"
                }
            }
        },
        "jsonapi.ManualsMeta": {
            "type": "object",
            "properties": {
                "manuals": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                }
            }
        },
        "jsonapi.ManualsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Manual"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/jsonapi.ManualsMeta"
                }
            }
        },
        "jsonapi.RestoreOperationCreateRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.RestoreOperationCreateRequestData"
                }
            }
        },
        "jsonapi.RestoreOperationCreateRequestData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.RestoreOperation"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "restores"
                    ],
                    "example": "restores"
                }
            }
        },
        "jsonapi.RestoreOperationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.RestoreOperationResponseData"
                }
            }
        },
        "jsonapi.RestoreOperationResponseData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/models.RestoreOperation"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "restores"
                    ],
                    "example": "restores"
                }
            }
        },
        "jsonapi.RestoreOperationsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jsonapi.RestoreOperationResponseData"
                    }
                }
            }
        },
        "jsonapi.SearchMeta": {
            "type": "object",
            "properties": {
                "entity_type": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "jsonapi.SearchResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {
                    "$ref": "#/definitions/jsonapi.SearchMeta"
                }
            }
        },
        "jsonapi.ValueAttrs": {
            "type": "object",
            "properties": {
                "area_totals": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "global_total": {
                    "type": "number"
                },
                "location_totals": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "jsonapi.ValueData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/jsonapi.ValueAttrs"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "jsonapi.ValueResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/jsonapi.ValueData"
                }
            }
        },
        "models.Area": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Commodity": {
            "type": "object",
            "properties": {
                "area_id": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "converted_original_price": {
                    "type": "number"
                },
                "count": {
                    "type": "integer"
                },
                "current_price": {
                    "type": "number"
                },
                "draft": {
                    "type": "boolean"
                },
                "extra_serial_numbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "last_modified_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "original_price": {
                    "type": "number"
                },
                "original_price_currency": {
                    "type": "string"
                },
                "part_numbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "purchase_date": {
                    "type": "string"
                },
                "registered_date": {
                    "type": "string"
                },
                "serial_number": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.CommodityStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.CommodityType"
                },
                "urls": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.CommodityStatus": {
            "type": "string",
            "enum": [
                "in_use",
                "sold",
                "lost",
                "disposed",
                "written_off"
            ],
            "x-enum-varnames": [
                "CommodityStatusInUse",
                "CommodityStatusSold",
                "CommodityStatusLost",
                "CommodityStatusDisposed",
                "CommodityStatusWrittenOff"
            ]
        },
        "models.CommodityType": {
            "type": "string",
            "enum": [
                "white_goods",
                "electronics",
                "equipment",
                "furniture",
                "clothes",
                "other"
            ],
            "x-enum-varnames": [
                "CommodityTypeWhiteGoods",
                "CommodityTypeElectronics",
                "CommodityTypeEquipment",
                "CommodityTypeFurniture",
                "CommodityTypeClothes",
                "CommodityTypeOther"
            ]
        },
        "models.Export": {
            "type": "object",
            "properties": {
                "area_count": {
                    "type": "integer"
                },
                "binary_data_size": {
                    "type": "integer"
                },
                "commodity_count": {
                    "type": "integer"
                },
                "completed_date": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "file_id": {
                    "type": "string"
                },
                "file_path": {
                    "description": "Deprecated: will be removed after migration",
                    "type": "string"
                },
                "file_size": {
                    "description": "Export statistics",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "image_count": {
                    "type": "integer"
                },
                "imported": {
                    "type": "boolean"
                },
                "include_file_data": {
                    "type": "boolean"
                },
                "invoice_count": {
                    "type": "integer"
                },
                "location_count": {
                    "type": "integer"
                },
                "manual_count": {
                    "type": "integer"
                },
                "selected_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ExportSelectedItem"
                    }
                },
                "status": {
                    "$ref": "#/definitions/models.ExportStatus"
                },
                "tenant_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ExportType"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.ExportSelectedItem": {
            "type": "object",
            "properties": {
                "area_id": {
                    "description": "For commodities: which area they belong to",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "include_all": {
                    "type": "boolean"
                },
                "location_id": {
                    "description": "Relationship fields for preserving hierarchy snapshot",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ExportSelectedItemType"
                }
            }
        },
        "models.ExportSelectedItemType": {
            "type": "string",
            "enum": [
                "location",
                "area",
                "commodity"
            ],
            "x-enum-varnames": [
                "ExportSelectedItemTypeLocation",
                "ExportSelectedItemTypeArea",
                "ExportSelectedItemTypeCommodity"
            ]
        },
        "models.ExportStatus": {
            "type": "string",
            "enum": [
                "pending",
                "in_progress",
                "completed",
                "failed"
            ],
            "x-enum-varnames": [
                "ExportStatusPending",
                "ExportStatusInProgress",
                "ExportStatusCompleted",
                "ExportStatusFailed"
            ]
        },
        "models.ExportType": {
            "type": "string",
            "enum": [
                "full_database",
                "selected_items",
                "locations",
                "areas",
                "commodities",
                "imported"
            ],
            "x-enum-varnames": [
                "ExportTypeFullDatabase",
                "ExportTypeSelectedItems",
                "ExportTypeLocations",
                "ExportTypeAreas",
                "ExportTypeCommodities",
                "ExportTypeImported"
            ]
        },
        "models.FileEntity": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt is when the file was created",
                    "type": "string"
                },
                "description": {
                    "description": "Description is an optional description of the file",
                    "type": "string"
                },
                "ext": {
                    "description": "Ext is the file extension including the dot.\nExample: \".pdf\"",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "linked_entity_id": {
                    "description": "LinkedEntityID is the ID of the linked entity (commodity or export)",
                    "type": "string"
                },
                "linked_entity_meta": {
                    "description": "LinkedEntityMeta contains metadata about the link type\nFor commodities: \"images\", \"invoices\", \"manuals\"\nFor exports: \"xml-1.0\" (version of the export file format)",
                    "type": "string"
                },
                "linked_entity_type": {
                    "description": "LinkedEntityType indicates what type of entity this file is linked to (commodity, export, or empty for standalone files)",
                    "type": "string"
                },
                "mime_type": {
                    "description": "MIMEType is the MIME type of the file.\nExample: \"application/pdf\"",
                    "type": "string"
                },
                "original_path": {
                    "description": "OriginalPath is the original filename as uploaded by the user.\nExample: \"invoice.pdf\"",
                    "type": "string"
                },
                "path": {
                    "description": "Path is the filename without extension. This is the only field that can be modified by the user.\nExample: \"invoice-2023\"",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags are optional tags for categorization and search",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tenant_id": {
                    "type": "string"
                },
                "title": {
                    "description": "Title is the user-defined title for the file",
                    "type": "string"
                },
                "type": {
                    "description": "Type represents the category of the file (image, document, etc.)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.FileType"
                        }
                    ]
                },
                "updated_at": {
                    "description": "UpdatedAt is when the file was last updated",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.FileType": {
            "type": "string",
            "enum": [
                "image",
                "document",
                "video",
                "audio",
                "archive",
                "other"
            ],
            "x-enum-varnames": [
                "FileTypeImage",
                "FileTypeDocument",
                "FileTypeVideo",
                "FileTypeAudio",
                "FileTypeArchive",
                "FileTypeOther"
            ]
        },
        "models.Image": {
            "type": "object",
            "properties": {
                "commodity_id": {
                    "type": "string"
                },
                "ext": {
                    "description": "Ext is the file extension including the dot.\nExample: \".pdf\"",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mime_type": {
                    "description": "MIMEType is the MIME type of the file.\nExample: \"application/pdf\"",
                    "type": "string"
                },
                "original_path": {
                    "description": "OriginalPath is the original filename as uploaded by the user.\nExample: \"invoice.pdf\"",
                    "type": "string"
                },
                "path": {
                    "description": "Path is the filename without extension. This is the only field that can be modified by the user.\nExample: \"invoice-2023\"",
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Invoice": {
            "type": "object",
            "properties": {
                "commodity_id": {
                    "type": "string"
                },
                "ext": {
                    "description": "Ext is the file extension including the dot.\nExample: \".pdf\"",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mime_type": {
                    "description": "MIMEType is the MIME type of the file.\nExample: \"application/pdf\"",
                    "type": "string"
                },
                "original_path": {
                    "description": "OriginalPath is the original filename as uploaded by the user.\nExample: \"invoice.pdf\"",
                    "type": "string"
                },
                "path": {
                    "description": "Path is the filename without extension. This is the only field that can be modified by the user.\nExample: \"invoice-2023\"",
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Location": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Manual": {
            "type": "object",
            "properties": {
                "commodity_id": {
                    "type": "string"
                },
                "ext": {
                    "description": "Ext is the file extension including the dot.\nExample: \".pdf\"",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mime_type": {
                    "description": "MIMEType is the MIME type of the file.\nExample: \"application/pdf\"",
                    "type": "string"
                },
                "original_path": {
                    "description": "OriginalPath is the original filename as uploaded by the user.\nExample: \"invoice.pdf\"",
                    "type": "string"
                },
                "path": {
                    "description": "Path is the filename without extension. This is the only field that can be modified by the user.\nExample: \"invoice-2023\"",
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.RestoreOperation": {
            "type": "object",
            "properties": {
                "area_count": {
                    "type": "integer"
                },
                "binary_data_size": {
                    "type": "integer"
                },
                "commodity_count": {
                    "type": "integer"
                },
                "completed_date": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "error_count": {
                    "type": "integer"
                },
                "error_message": {
                    "type": "string"
                },
                "export_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_count": {
                    "type": "integer"
                },
                "invoice_count": {
                    "type": "integer"
                },
                "location_count": {
                    "description": "Statistics",
                    "type": "integer"
                },
                "manual_count": {
                    "type": "integer"
                },
                "options": {
                    "$ref": "#/definitions/models.RestoreOptions"
                },
                "started_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.RestoreStatus"
                },
                "steps": {
                    "description": "Related steps (not stored in DB, loaded separately)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RestoreStep"
                    }
                },
                "tenant_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.RestoreOptions": {
            "type": "object",
            "properties": {
                "dry_run": {
                    "type": "boolean"
                },
                "include_file_data": {
                    "type": "boolean"
                },
                "strategy": {
                    "type": "string"
                }
            }
        },
        "models.RestoreStatus": {
            "type": "string",
            "enum": [
                "pending",
                "running",
                "completed",
                "failed"
            ],
            "x-enum-varnames": [
                "RestoreStatusPending",
                "RestoreStatusRunning",
                "RestoreStatusCompleted",
                "RestoreStatusFailed"
            ]
        },
        "models.RestoreStep": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "duration": {
                    "description": "Duration in milliseconds",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "description": "Reason for error or skip",
                    "type": "string"
                },
                "restore_operation_id": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/models.RestoreStepResult"
                },
                "tenant_id": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.RestoreStepResult": {
            "type": "string",
            "enum": [
                "todo",
                "in_progress",
                "success",
                "error",
                "skipped"
            ],
            "x-enum-varnames": [
                "RestoreStepResultTodo",
                "RestoreStepResultInProgress",
                "RestoreStepResultSuccess",
                "RestoreStepResultError",
                "RestoreStepResultSkipped"
            ]
        },
        "models.SettingsObject": {
            "type": "object",
            "properties": {
                "defaultDateFormat": {
                    "type": "string"
                },
                "mainCurrency": {
                    "type": "string"
                },
                "showDebugInfo": {
                    "type": "boolean"
                },
                "theme": {
                    "type": "string"
                }
            }
        },
        "registry.DatabaseCapabilities": {
            "type": "object",
            "properties": {
                "advancedIndexing": {
                    "description": "GIN, GiST, partial indexes",
                    "type": "boolean"
                },
                "arrayOperations": {
                    "description": "Array data types and operations",
                    "type": "boolean"
                },
                "bulkOperations": {
                    "description": "Efficient bulk insert/update",
                    "type": "boolean"
                },
                "fullTextSearch": {
                    "description": "PostgreSQL tsvector, MySQL FULLTEXT",
                    "type": "boolean"
                },
                "jsonboperators": {
                    "description": "PostgreSQL JSONB operators (@\u003e, ?, etc.)",
                    "type": "boolean"
                },
                "storedProcedures": {
                    "description": "Stored procedures/functions",
                    "type": "boolean"
                },
                "transactions": {
                    "description": "Transaction support",
                    "type": "boolean"
                },
                "triggers": {
                    "description": "Database triggers",
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Inventario API",
	Description:      "This is an Inventario daemon.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
